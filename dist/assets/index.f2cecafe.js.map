{"version":3,"file":"index.f2cecafe.js","sources":["../../vite/modulepreload-polyfill","../../src/interface.ts","../../src/pointDefs.ts","../../src/helper.ts","../../src/platnoResize.ts","../../src/rangeManager.ts","../../src/transform.ts","../../src/visuals/visual.ts","../../src/visuals/circle.ts","../../src/visuals/line.ts","../../src/svgRenderer.ts","../../src/index.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export enum NodeName {\r\n  path,\r\n  line,\r\n  text,\r\n  tspan,\r\n  circle,\r\n  ellipse,\r\n  rect,\r\n  g,\r\n  use,\r\n  defs,\r\n  pattern,\r\n  clipPath,\r\n  svg\r\n}\r\nexport enum TypeConstant {\r\n  line = 1,\r\n  lines = 11,\r\n  shp = 2,\r\n  arc = 3,\r\n  text = 40,\r\n  redlinetext = 14,\r\n  circle = 5,\r\n  ellipse = 6,\r\n  lineString = 7,\r\n  solidHole = 9,\r\n  cell = 10,\r\n  reference = 20,\r\n  link = 30\r\n}\r\nexport interface IPoint {\r\n  x: number;\r\n  y: number;\r\n  Clone(): IPoint;\r\n  SubtractPoint(point: IPoint): IPoint;\r\n  AddPoint(point: IPoint): IPoint;\r\n  toString(): string;\r\n}\r\nexport interface IBox{\r\n  width:number;\r\n  height:number;\r\n  origin:IPoint;\r\n}\r\nexport interface ITransformParameters {\r\n  trl: IPoint;\r\n  bb:IPoint;\r\n  scl: number;\r\n}","import { IPoint } from \"./interface\";\r\n\r\nexport class Point implements IPoint {\r\n  static PointFromObject(o: any): Point {\r\n      return new Point(o.x, o.y);\r\n  }\r\n  static PointsFromObjects(oo: any): IPoint[] {\r\n      const ret: IPoint[] = [];\r\n      const h:number = oo.length;\r\n      for (let i: number = 0; i < h; i++) {\r\n          ret.push(Point.PointFromObject(oo[i]));\r\n      }\r\n      return ret;\r\n  }\r\n  static dlzka(p1:IPoint,p2:IPoint):number{\r\n    let ret:number;\r\n    let a:number;\r\n    let b:number;\r\n    a=p2.x-p1.x;\r\n    b=p2.y-p1.y;\r\n    ret=Math.sqrt( a*a+b*b);\r\n    return ret;\r\n  }\r\n  static ExactPoint(b: IPoint, r: number = 0):IPoint {\r\n      return new Point(parseFloat(b.x.toFixed(r)), parseFloat(b.y.toFixed(r)));\r\n  }\r\n  static Rotate(origin: Point, angle: number, b: Point): Point {\r\n      if (angle === 0) {\r\n          return b.Clone();\r\n      }\r\n      const s: number = Math.sin(angle);\r\n      const c: number = Math.cos(angle);\r\n      const p: Point = new Point(b.x - origin.x, b.y - origin.y);\r\n      const x: number = p.x * c - p.y * s;\r\n      const y: number = p.x * s + p.y * c;\r\n      return new Point(origin.x + x, origin.y + y);\r\n  }\r\n  static String2Points(t: string): Point[] {\r\n      const res: any = t.match(/-?\\d+(\\.\\d+)?/g);\r\n      const length: number = res.length;\r\n      let i: number = 0;\r\n      const ret: Point[] = [];\r\n      while (i < length) {\r\n          const p: Point = new Point(\r\n              Number.parseFloat(res[i]),\r\n              Number.parseFloat(res[i + 1])\r\n          );\r\n          ret.push(p);\r\n          i += 2;\r\n      }\r\n      return ret;\r\n  }\r\n   Clone(): IPoint {\r\n      return new Point(this.x, this.y);\r\n  }\r\n  SubtractPoint(point: IPoint): IPoint {\r\n      return new Point(this.x - point.x, this.y - point.y);\r\n  }\r\n  AddPoint(point: IPoint): IPoint {\r\n      return new Point(point.x + this.x, point.y + this.y);\r\n  }\r\n  x: number = 0;\r\n  y: number = 0;\r\n  toString(): string {\r\n      return this.y < 0 ? this.x + \"\" + this.y : this.x + \" \" + this.y;\r\n  }\r\n  constructor(x?: number, y?: number) {\r\n      this.x = x === undefined ? 0 : x;\r\n      this.y = y === undefined ? 0 : y;\r\n  }\r\n}","import { IBox, IPoint, ITransformParameters, NodeName } from \"./interface\";\r\nimport { Point } from \"./pointDefs\";\r\nconst svgNs: string = \"http://www.w3.org/2000/svg\";\r\nconst standardStyles: string[] = [\"2 6\", \"8 3\", \"14 4\", \"10 4 4 4\", \"3 5\", \"6 3 2 3 2 3\", \"10 3 3 3\"];\r\nexport const CreateSvgObject = (name: NodeName, j: any): HTMLElement => {\r\n    const nod: string = NodeName[name];\r\n    const e: Element = document.createElementNS(svgNs, nod);\r\n    let key: string;\r\n    // tslint:disable-next-line:forin\r\n    for (key in j) {\r\n        e.setAttribute(key, j[key]);\r\n    }\r\n    return (e as HTMLElement);\r\n}\r\nexport const Round = (n: number, digits?: number): number => {\r\n    if (digits === undefined) {\r\n        digits = 2;\r\n    }\r\n    return parseFloat(n.toFixed(digits));\r\n}\r\nexport const getSize = (svgArea: HTMLElement): IPoint => {\r\n    return new Point(svgArea.clientWidth, svgArea.clientHeight);\r\n}\r\nexport const getDefaultTP=(window: IBox, range: IBox): ITransformParameters =>{\r\n    let scl: number = window.width / range.width;\r\n    const r: number = window.height / range.height;\r\n    const trl: IPoint = new Point();\r\n    const bb: IPoint = range.origin;\r\n    if (r < scl) {\r\n      scl = r;\r\n      trl.x = Round((window.width - range.width * scl) / 2, 2);\r\n    } else {\r\n      trl.y = Round((window.height - range.height * scl) / 2, 2);\r\n    }\r\n    return { trl, scl, bb };\r\n  }\r\n  const getLineStyle=(n:number):string=>{\r\n    let r:string=\"\";\r\n    if(n>0){\r\n        r=standardStyles[n-1];\r\n    }\r\n    return r;\r\n  }\r\n  export const styleFromObject = (obj: any): string => {\r\n    const t: string[] = [];\r\n    for (const key in obj) {\r\n      if (obj[key] !== null && obj[key] !== undefined) {\r\n        if (key === \"stroke-dasharray\") {\r\n          t.push(key + \":\" + getLineStyle(obj[key]));\r\n        } else {\r\n          let value = obj[key];\r\n          t.push(key + \":\" + value);\r\n        }\r\n      }\r\n    }\r\n    return t.join(\";\")\r\n  }\r\n export const PathFromPoints = (bb: IPoint[], cutFirst: boolean = false): string => {\r\n    if (bb === undefined || bb.length === 0) {\r\n      return \"\";\r\n    }\r\n    const MiniPath = (a: IPoint, b: IPoint): string => {\r\n        let d: string = \"\";\r\n        const m: IPoint = new Point(Round(a.x - b.x, 1), Round(a.y - b.y, 1));\r\n        if (m.x === 0 && m.y !== 0) {\r\n          d += \"v\" + m.y;\r\n        } else if (m.x !== 0 && m.y === 0) {\r\n          d += \"h\" + m.x;\r\n        } else if (m.x !== 0 && m.y !== 0) {\r\n          d += \"l\" + m.x + \" \" + m.y;\r\n        }\r\n        return d;\r\n      }\r\n    const length: number = bb.length;\r\n    let d: string = cutFirst === true ? \"\" : \"M\" + bb[0].toString();\r\n    if (length > 1) {\r\n      for (let i: number = 1; i < length; i++) {\r\n        d += MiniPath(bb[i], bb[i - 1]);\r\n      }\r\n    }\r\n    return d;\r\n  }","import { getSize } from \"./helper\";\r\nimport { IPoint } from \"./interface\";\r\nimport { Point } from \"./pointDefs\";\r\n\r\nexport class PlatnoResize {\r\n    platno: HTMLElement;\r\n    spendlik: HTMLElement;\r\n    infoSize: HTMLElement;\r\n    body:HTMLElement;\r\n\r\n    resizeEvents() {\r\n        let ptPlatno: IPoint;\r\n        let btPosition: IPoint;\r\n        let move: boolean = false;\r\n        this.spendlik.style.display=\"\";\r\n        const reset= ()=>{\r\n            this.spendlik.style.backgroundColor = \"\";\r\n            move = false;\r\n        }\r\n        this.spendlik.addEventListener(\"pointerdown\", () => {\r\n            this.spendlik.style.backgroundColor = \"yellow\";\r\n            ptPlatno = getSize(this.platno);\r\n            btPosition = new Point(this.spendlik.offsetLeft, this.spendlik.offsetTop);\r\n            move = true;\r\n            this.spendlik.style.cursor = \"grab\";\r\n        })\r\n        this.body.addEventListener(\"pointermove\", (e: PointerEvent) => {\r\n            if (move) {\r\n                const dt: IPoint = new Point(e.movementX, e.movementY);\r\n                btPosition=btPosition.AddPoint(dt);\r\n                ptPlatno=ptPlatno.AddPoint(dt);\r\n                this.spendlik.setAttribute(\"style\",`left:${btPosition.x}px;top:${btPosition.y}px`)\r\n                this.spendlik.style.cursor = \"grabbing\";\r\n                this.spendlik.style.backgroundColor = \"orange\";\r\n                this.platno.setAttribute(\"style\",`width:${ptPlatno.x}px;height:${ptPlatno.y}px;`);\r\n                this.infoSize.innerText = \"Rozmery plátna: šírka:\" + ptPlatno.x + \"; výška:\" + ptPlatno.y;\r\n            }\r\n        })\r\n        this.spendlik.addEventListener(\"pointerup\", () => {\r\n            reset();\r\n        })\r\n        this.spendlik.addEventListener(\"pointerleave\", () => {\r\n          reset();\r\n        })\r\n    }\r\n\r\n    constructor(platno: HTMLElement,\r\n        spendlik: HTMLElement,\r\n        infoSize: HTMLElement) {\r\n        this.infoSize = infoSize;\r\n        this.platno = platno;\r\n        this.spendlik = spendlik;\r\n        this.spendlik.style.cursor = \"nwse-resize\";\r\n        this.body=document.getElementsByTagName(\"body\")[0];\r\n        this.resizeEvents();\r\n    }\r\n}","import { Round } from \"./helper\";\r\nimport { IBox } from \"./interface\";\r\nimport { Point } from \"./pointDefs\";\r\n\r\nexport class RangeManager {\r\n    static rangeByPoints(b: Point[], realPosition: boolean): IBox{\r\n        const length: number = b.length;\r\n        const rg: IBox = { origin: new Point(), width: 0, height: 0 };\r\n        if (b.length < 0) {\r\n          throw new Error(\"Range undefined\");\r\n        }\r\n        if (length < 2) {\r\n          rg.origin = b[0];\r\n          rg.width = rg.height = 0;\r\n          return rg;\r\n        }\r\n        const origin: Point = new Point(b[0].x, b[0].y);\r\n        const oB: Point = origin.Clone();\r\n        for (let i: number = 1; i < length; i++) {\r\n          const n: Point = b[i];\r\n          if (n.x < origin.x) {\r\n            origin.x = n.x;\r\n          }\r\n          if (n.x > oB.x) {\r\n            oB.x = n.x;\r\n          }\r\n          if (n.y < origin.y) {\r\n            origin.y = n.y;\r\n          }\r\n          if (n.y > oB.y) {\r\n            oB.y = n.y;\r\n          }\r\n        }\r\n        const width: number = Round(oB.x - origin.x, 4);\r\n        const height: number = Round(oB.y - origin.y, 4);\r\n        if (realPosition === true) {\r\n          origin.y += height;\r\n        }\r\n        rg.origin = origin;\r\n        rg.width = width;\r\n        rg.height = height;\r\n        return rg;\r\n    }\r\n    static rangeByRanges(bb: IBox[]): IBox {\r\n        bb = bb.filter(f => (f));\r\n        const b: Point[] = new Array<Point>();\r\n        bb.forEach((box: IBox) => {\r\n          b.push(box.origin);\r\n          b.push(new Point(box.origin.x + box.width, box.origin.y - box.height));\r\n        });\r\n        return this.rangeByPoints(b, true);\r\n      }\r\n\r\n}","import { Round } from \"./helper\";\r\nimport { IPoint, ITransformParameters } from \"./interface\";\r\nimport { Point } from \"./pointDefs\";\r\n\r\nexport const transform2Window=(b: IPoint, trf: ITransformParameters, r?: number): IPoint=> {\r\n    if (!r) {\r\n      r = 1;\r\n    }\r\n    const x: number = Round((b.x - trf.bb.x) * trf.scl + trf.trl.x, r);\r\n    const y: number = Round((b.y - trf.bb.y) * -trf.scl + trf.trl.y, r);\r\n    return new Point(x, y);\r\n  }\r\n export const transformArray2Window=(bb: IPoint[], trf: ITransformParameters, r?: number): IPoint[]=> {\r\n    const ret: IPoint[] = [];\r\n    bb.forEach(b => {\r\n      ret.push(transform2Window(b, trf, r))\r\n    });\r\n    return ret;\r\n  }","import { IBox, IPoint, ITransformParameters, TypeConstant } from \"../interface\";\r\n\r\nexport abstract class Visual{\r\n    trf: ITransformParameters;\r\n    style: any;\r\n    points: IPoint[];\r\n    level?: string;\r\n    type: TypeConstant;\r\n    range:IBox;\r\n    abstract create(): HTMLElement;\r\n    abstract style2String(): string;\r\n}","import { CreateSvgObject, styleFromObject } from \"../helper\";\r\nimport { IPoint, ITransformParameters, NodeName, TypeConstant } from \"../interface\";\r\nimport { Point } from \"../pointDefs\";\r\nimport { transformArray2Window } from \"../transform\";\r\nimport { Visual } from \"./visual\";\r\n\r\nexport class Circle extends Visual{\r\n    r: number;\r\n    create(): HTMLElement {\r\n        let e: HTMLElement;\r\n        const stl = this.style2String();\r\n        const c: IPoint = this.points[0];\r\n        e = CreateSvgObject(NodeName.circle, {\r\n            cx: c.x, cy: c.y, r: this.r\r\n        });\r\n        if (stl) {\r\n            e.setAttribute(\"style\", stl);\r\n        }\r\n        return e;\r\n    }\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    constructor(src:any,tp:ITransformParameters){\r\n        super();\r\n        this.type=TypeConstant.circle;\r\n        this.range=src.range;\r\n        this.points = transformArray2Window([src.center,new Point(src.center.x+src.r,src.center.y)], tp);\r\n        this.r=Point.dlzka(this.points[0],this.points[1]);\r\n        this.style\r\n        this.style = (src.style) ? src.style : undefined\r\n    }\r\n}","import { CreateSvgObject, PathFromPoints, styleFromObject } from \"../helper\";\r\nimport { ITransformParameters, NodeName, TypeConstant } from \"../interface\";\r\nimport { transformArray2Window } from \"../transform\";\r\nimport { Visual } from \"./visual\";\r\n\r\nexport class Line extends Visual{\r\n    create(): HTMLElement {\r\n        let e: HTMLElement;\r\n        const d: string = PathFromPoints(this.points);\r\n        const stl = this.style2String();\r\n        e = CreateSvgObject(NodeName.path, { d });\r\n        if (stl) {\r\n            e.setAttribute(\"style\", stl);\r\n        }\r\n        return e;\r\n    }\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    constructor(src:any,tp:ITransformParameters){\r\n        super();\r\n        this.type=TypeConstant.line;\r\n        this.points = transformArray2Window(src.points, tp);\r\n        this.range=src.range;\r\n        this.style\r\n        this.style = (src.style) ? src.style : undefined\r\n    }\r\n}\r\n\r\n","import { CreateSvgObject, Round, getDefaultTP, getSize } from \"./helper\";\r\nimport { IBox, IPoint, ITransformParameters, NodeName, TypeConstant } from \"./interface\";\r\nimport { PlatnoResize } from \"./platnoResize\";\r\nimport { Point } from \"./pointDefs\";\r\nimport { RangeManager } from \"./rangeManager\";\r\nimport { transform2Window } from \"./transform\";\r\nimport { Circle } from \"./visuals/circle\";\r\nimport { Line } from \"./visuals/line\";\r\nimport { Visual } from \"./visuals/visual\";\r\n\r\nexport class SvgRenderer {\r\n    platno: HTMLElement;\r\n    spendlik: HTMLElement;\r\n    infoSize: HTMLElement;\r\n    svg: HTMLElement;\r\n    src: any;\r\n    tp: ITransformParameters;\r\n    rgOfAll: IBox;\r\n    scale2Fit() {\r\n        const rr: IBox[] = this.src.visuals.map(f => f.range);\r\n        this.rgOfAll = RangeManager.rangeByRanges(rr);\r\n        const platno: IPoint = getSize(this.platno);\r\n        const window: IBox = { origin: new Point, width: platno.x, height: platno.y }\r\n        this.tp = getDefaultTP(window, this.rgOfAll);\r\n        this.infoSize.innerText = \"Rozmery plátna: šírka:\" + window.width + \"; výška:\" + window.height;\r\n    }\r\n    renderer() {\r\n        this.svg.innerHTML = \"\";\r\n        const visuals: Visual[] = [];\r\n        this.src.visuals.forEach(e => {\r\n            let v: Visual;\r\n            switch (e.type) {\r\n                case TypeConstant.line:\r\n                    v = new Line(e, this.tp);\r\n                    visuals.push(v);\r\n                    break;\r\n                case TypeConstant.circle:\r\n                    v = new Circle(e, this.tp);\r\n                    visuals.push(v);\r\n                    break;\r\n            }\r\n        })\r\n        const g: HTMLElement = CreateSvgObject(NodeName.g, {\r\n            id: \"grf\",\r\n            fill: \"none\",\r\n            transform: \"\"\r\n        })\r\n        const addRange = (rg: IBox, stl: string) => {\r\n            const org: IPoint = transform2Window(rg.origin, this.tp);\r\n            const width: number = Round(rg.width * this.tp.scl, 0);\r\n            const height: number = Round(rg.height * this.tp.scl, 0);\r\n            const rect: HTMLElement = CreateSvgObject(NodeName.rect, { x: org.x, y: org.y, width, height, style: stl })\r\n            g.appendChild(rect);\r\n        }\r\n        visuals.forEach((v: Visual) => {\r\n            g.appendChild(v.create());\r\n            addRange(v.range, \"stroke:green;stroke-width:5;opacity:0.7;stroke-dasharray:4\");\r\n        });\r\n        addRange(this.rgOfAll, \"stroke:orange;stroke-width:8;opacity:0.3;stroke-dasharray:6 3\");\r\n        this.svg.appendChild(g);\r\n    }\r\n    constructor(src: any) {\r\n        this.src = src;\r\n        this.infoSize = document.getElementById(\"infoSize\") as any;\r\n        this.spendlik = document.getElementById(\"btResize\") as any;\r\n        this.platno = document.getElementById(\"box\") as any;\r\n        this.svg = this.platno.querySelector(\"svg\") as any;\r\n        this.scale2Fit();\r\n        this.renderer();\r\n        new PlatnoResize(this.platno, this.spendlik, this.infoSize);\r\n    }\r\n}","import { CreateSvgObject } from \"./helper\";\r\nimport { IPoint, NodeName } from \"./interface\";\r\nimport { Point } from \"./pointDefs\";\r\nimport { SvgRenderer } from \"./svgRenderer\";\r\n\r\nconst btTest: HTMLElement = document.getElementById(\"btTest\") as any;\r\n\r\nvar renderer:SvgRenderer;\r\n\r\nconst spocitajDlzku = (bb: IPoint[]): number => {\r\n  let dl: number = 0;\r\n\r\n  for (let i = 1; i < bb.length; i++) {\r\n    dl += Point.dlzka(bb[i - 1], bb[i]);\r\n    if(i==4){\r\n      console.log(\"AAA\");\r\n    }\r\n  }\r\n  return dl;\r\n}\r\n\r\nconst ht = document.createElement('div') as any;\r\n\r\nconst drawPath = (bb: IPoint[]) => {\r\n  const ret: IPoint[] = Point.PointsFromObjects(bb);\r\n  let svg = new String(`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\"> <g fill=\"none\" width=\"100%\" height=\"100%\"> <path d=\"`);\r\n  console.log(ret);\r\n  let a=0,b=0,c=0,d=0;\r\n\r\n  for (let i = 1; i < bb.length; i++) {\r\n    if(i==1){\r\n      a=ret[i-1].x;\r\n      b=ret[i-1].y;\r\n      c=ret[i].x;\r\n      d=ret[i].y;\r\n    }else{\r\n      a+=ret[i-1].x;\r\n      b+=ret[i-1].y;\r\n      c=ret[i].x;\r\n      d=ret[i].y;\r\n    }\r\n    // let text1 = ret[i-1].x.toString();\r\n    // let text2 = ret[i-1].y.toString();\r\n    // let text3 = ret[i].x.toString();\r\n    // let text4 = ret[i].y.toString();\r\n    svg += ` M ${a} ${b} l ${c} ${d} `;\r\n    \r\n  }\r\n  svg += `\" stroke=\"red\" stroke-width=\"3\" width=\"100%\" height=\"100%\" /> </g> </svg>`;\r\n  console.log(svg);\r\n\r\n  ht.innerHTML = svg;\r\n  const box = document.getElementById('box');\r\n  box?.append(ht);\r\n}\r\n\r\nbtTest?.addEventListener(\"click\", () => {\r\n  fetch(\"http://localhost:3000/drawing/1\")\r\n    .then(response => response.json())  \r\n    .then((data) => {\r\n      if(renderer){\r\n        renderer.scale2Fit();\r\n        renderer.renderer();\r\n      } else{\r\n        renderer=new SvgRenderer(data);\r\n      }\r\n    }\r\n    );\r\n})\r\n\r\nconst aa: HTMLElement = document.getElementById(\"btBody\") as any;\r\n\r\nconst vytvorenObj=():HTMLElement=>{\r\n  let e:HTMLElement= CreateSvgObject(NodeName.line,{\r\n    _id:777,\r\n    x1:0,\r\n    y1:0,\r\n    x2:200,\r\n    y2:300,\r\n    style:\"stroke:rgb(255,0,0);stroke-width:2\"\r\n  })\r\n  return e;\r\n}\r\n\r\naa.addEventListener(\"click\", () => {\r\n  let a: IPoint;\r\n  a = new Point(7.222447, 8.45436355);\r\n  let b: IPoint = Point.ExactPoint(a, 2)\r\n  console.log(b.toString());\r\n\r\n})\r\n\r\nconst bb:HTMLElement = document.getElementById(\"load\") as any;\r\n\r\nbb.addEventListener(\"click\", () =>{\r\n  fetch(\"http://localhost:3000/drawing/1\")\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n      const points: IPoint[] = data.visuals.find(f => f.type === 1).points;\r\n      drawPath(points);\r\n    }\r\n    );\r\n})\r\n"],"names":["NodeName","TypeConstant","p","bb","d"],"mappings":"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"}